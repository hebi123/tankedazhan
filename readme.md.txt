## 项目名称
坦克大战（Python/Pygame 实现）

## 项目简介
一款经典俯视视角的 2D 坦克对战游戏。玩家操控坦克在由砖块、钢板、草地、冰面与水域组成的关卡中与多波敌人战斗，保护基地（鹰标），通过拾取道具强化能力并通关多张关卡。项目采用 Python + Pygame 实现，支持键鼠或手柄，内置关卡数据格式与存档系统，具备可扩展的资源与关卡编辑能力。

## 目标平台
- **操作系统**: Windows 10 及以上（兼容 macOS/Linux 作为加分项）
- **运行环境**: Python 3.10+，Pygame 2.5+（建议使用 venv）
- **分辨率**: 采用 16:9 逻辑分辨率（默认 960x540），可缩放至全屏

## 核心玩法需求
1. **玩家**
   - 单人模式：1 名玩家操控 1 台坦克。
   - 生命/复活：初始 3 命，死亡后在出生点复活；生命耗尽则游戏失败。
   - 升级：拾取道具或达成得分阶段可提升子弹威力、射速或一次可发射子弹上限。
   - 控制：键盘方向移动（WASD/方向键），射击（J/空格），可设置自定义按键。

2. **敌人**
   - 敌方类型至少 4 种（普通、快速、重装、特殊），移动速度、装甲与射速各异。
   - 波次：每关生成固定总数（例如 20 台），按波次出现，屏幕上同时存在上限（例如 4 台）。
   - AI：寻路/巡逻，遇到障碍绕行；优先攻击玩家与基地；具备随机性（不可完全可预测）。

3. **地图/关卡**
   - 基础瓦片：砖块（可被普通弹破坏）、钢板（仅高威力弹可破坏/不可破坏）、草地（遮挡单位但不阻挡移动/弹道）、水面（阻挡坦克但不阻挡子弹）、冰面（降低摩擦，滑行效果）、地面（可通行）。
   - 基地（鹰）：位于玩家阵地后方，被击毁则关卡失败。钢板/砖块可围墙防护。
   - 关卡尺寸：例如 26x26 网格（与经典一致），每格 16px，逻辑像素可放大渲染。

4. **道具系统**（随机从被标记的敌方或时间触发产生）
   - 星星：升级玩家坦克（提高子弹威力/数量/射速）
   - 头盔：短时间无敌
   - 锹：短时间将基地围墙变为钢板
   - 炸弹：清屏消灭所有在场敌人
   - 坦克：+1 生命
   - 枪：升级至高威力弹（可破钢板，持续至死亡或关终）

5. **战斗与碰撞**
   - 子弹与单位、砖块、钢板、边界的碰撞检测与分层处理。
   - 子弹/瓦片交互：普通弹破坏砖块，高威力弹可伤钢板（或反弹/无效，取决于难度设置）。
   - 友伤规则：默认玩家与玩家子弹不互伤，敌人之间可互伤为可配置项。
   - 爆炸、受击反馈（特效与音效）。

6. **胜负条件**
   - 胜利：击败当前关卡的全部敌人。
   - 失败：玩家生命耗尽或基地被击毁。

## UI/UX 需求
- 主菜单：开始游戏、关卡选择、设置、退出。
- 暂停菜单：继续、重新开始当前关、设置、返回主菜单。
- HUD：玩家生命、分数、当前关卡、剩余敌人数、阶段图标。
- 结算面板：显示本关击毁各类敌人数、所得分数、累计分数。
- 设置：音量（音乐/音效）、全屏切换、分辨率缩放、按键映射。

## 视觉与音频
- 占位资源：初期可使用占位贴图与音效，后续可替换正式素材。
- 贴图：坦克四向动画（或方向帧），瓦片图集，爆炸序列帧，UI 图标。
- 音频：射击、命中、爆炸、拾取道具、升级、按钮点击、背景音乐。

## 关卡与数据格式
1. 关卡文件（JSON 或 TMX 二选一，默认 JSON）：
   - 元数据：名称、编号、敌人总数、同时上限、敌人出场表（类型、批次、是否掉落）。
   - 地图：二维数组或压缩编码，指示每格瓦片类型（brick/steel/grass/water/ice/ground）。
   - 特殊点位：玩家出生点、敌人出生点集合、基地位置。

2. 存档/配置（JSON）：
   - 配置：音量、按键映射、分辨率、全屏。
   - 进度：最高通关关卡、累计分数、剩余生命（可选）、难度。

## 技术与架构
- 引擎：Pygame 事件循环 + 固定时间步（逻辑帧 60 FPS）与渲染解耦（可变刷新）。
- 模块划分：
  - `game/app.py`：入口与主循环
  - `game/core/`：时间步、场景管理、事件派发
  - `game/entities/`：玩家、敌人、子弹、爆炸、基地
  - `game/map/`：瓦片地图、碰撞网格、关卡加载
  - `game/ui/`：菜单、HUD、结算
  - `game/resources/`：资源管理与加载（图片、声音、字体）
  - `game/data/`：关卡与配置文件
  - `assets/`：图片与音频资源

- 物理与碰撞：网格对齐移动，AABB 碰撞；子弹与瓦片采用射线/步进检测，确保高速不穿透。
- 可扩展性：坦克属性与敌人 AI 通过数据驱动（配置可覆盖默认值）。

## 性能目标
- 目标 60 FPS（960x540 渲染，最多 100 个活动实体时仍稳定）。
- 批量渲染：瓦片合批绘制；资源缓存；音频复用通道。

## 可配置难度
- 简单：敌人移动慢、射速慢，钢板不可被玩家破坏。
- 普通：默认参数。
- 困难：敌人更快、视野更广，友伤开启，玩家无敌帧缩短。

## 输入设备
- 键盘（默认 WASD + J/空格 开火）。
- 手柄（可选）：左摇杆/方向键移动，A 开火；可在设置中打开/关闭。

## 辅助功能（可及性）
- 色弱友好模式（高对比贴图与 UI）。
- 可调整体游戏速度（80%~120%）。

## 资源与打包
- 依赖：`pygame`, `numpy`（可选，用于路径/网格计算），`pyinstaller`（打包）。
- 打包：生成 Windows 可执行文件，包含必要的 `assets/` 与 `data/`。

## 开发里程碑与验收标准
1. 里程碑 M1：项目初始化与主循环
   - 运行窗口、固定时间步逻辑，空场景 60 FPS。
2. 里程碑 M2：地图与碰撞
   - 地图渲染、砖块/钢板/草/水/冰交互，玩家移动与阻挡正确。
3. 里程碑 M3：战斗系统
   - 射击、子弹与瓦片/单位碰撞、爆炸效果，基地判定。
4. 里程碑 M4：敌人与 AI
   - 4 种敌人、波次与上限、基础 AI 追击/巡逻，难度可切换。
5. 里程碑 M5：道具与升级
   - 随机掉落与拾取，能力升级生效，HUD 显示。
6. 里程碑 M6：UI 与存档
   - 主菜单/暂停/设置/结算，配置与进度持久化。
7. 里程碑 M7：音效与打包
   - 基本音效/音乐接入，完成 Windows 打包与运行说明。

### 验收标准（关键用例）
- 玩家可在地图上平滑移动并准确被瓦片阻挡；冰面具滑行效果。
- 射击可破坏砖块，强化后可破坏钢板（或按难度生效）。
- 敌人按波次生成，具有基础追击/绕行能力；可攻击玩家与基地。
- 基地被击毁/玩家生命为 0 时失败，清空敌人胜利，结算统计正确。
- 拾取道具触发对应效果且有时间限制反馈；HUD 与音效同步。
- 设置项在重启后仍保留（JSON 持久化）。
- 全屏/窗口切换稳定，帧率在 60 FPS 附近。

## 目录结构（计划）
```
project/
  README.md (本文件)
  requirements.txt
  assets/
    images/
    sounds/
    fonts/
  game/
    app.py
    core/
    entities/
    map/
    ui/
    resources/
    data/
      levels/
      config.json
  tools/
    level_convert.py
```

## 运行与开发（占位）
- 创建虚拟环境并安装依赖：`pip install -r requirements.txt`
- 运行：`python -m game.app`
- 打包：`pyinstaller -F -w game/app.py`（后续补充 spec 与资源复制）

## 许可证
- 代码采用 MIT 许可证；第三方素材遵循其各自授权。


